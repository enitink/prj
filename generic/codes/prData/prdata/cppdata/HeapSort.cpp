#include<iostream>

using std :: cin;
using std :: cout;
using std :: endl;

int iterations;

void DisplayArray(int Array[], int Size)
{
	cout << endl << "Array : ";
	for (int i = 0; i < Size ; ++i)
		cout << " " << Array[i];
}


void siftDown(int numbers[], int root, int bottom)
{
	int done, maxChild, temp;

	done = 0;
	while ((root*2 <= bottom) && (!done))
  	{
  		if (root*2 == bottom)
			maxChild = root * 2;
		else if (numbers[root * 2] > numbers[root * 2 + 1])
			maxChild = root * 2;
		else
			maxChild = root * 2 + 1;

		if (numbers[root] < numbers[maxChild])
		{
			++iterations;
			temp = numbers[root];
			numbers[root] = numbers[maxChild];
			numbers[maxChild] = temp;
			root = maxChild;
		}
		else
			done = 1;
	}
}
	
void heapSort(int numbers[], int array_size)
{
	int i, temp;
	
	for (i = (array_size / 2)-1; i >= 0; i--)
	{
		siftDown(numbers, i, array_size);
	}
	
	for (i = array_size-1; i >= 1; i--)
	{
		temp = numbers[0];
		numbers[0] = numbers[i];
		numbers[i] = temp;
		siftDown(numbers, 0, i-1);
	}
}

int main()
{
	int numbers[] = { 10, 1, 17, 9,  500, 0, 100, 23, 56, 12, 34, 78, 90, 900, 234, 455, 31, 92, 32, 2, 65, 3, 87, 4, 7, 6, 8, 13,
	 21, 85, 11, 67, 66, 23445, 9899, 232, 999, 23445, 1234, 3444, 278, 876, 871, 230, 302, 205, 1001, 756, 765, 657, 675, 576,
	 567, 111, 123, 132, 231, 213, 312, 321, 456, 465, 546, 564, 654, 645, 987, 978, 789, 798, 879, 897, 963, 936, 639, 693, 369,
	 396, 852, 825, 258, 285, 582, 528, 741, 714, 147, 174, 417, 471, 753, 735, 357, 375, 573, 537, 951, 915, 519, 591, 10, 1, 17,
	 9,  500, 0, 100, 23, 56, 12, 34, 78, 90, 900, 234, 455, 31, 92, 32, 2, 65, 3, 87, 4, 7, 6, 8, 13,21, 85, 11, 67, 66, 23445,
	 9899, 232, 999, 23445, 1234, 3444, 278, 876, 871, 230, 302, 205, 1001, 756, 765, 657, 675, 576, 567, 111, 123, 132, 231, 213,
	 312, 321, 456, 465, 546, 564, 654, 645, 987, 978, 789, 798, 879, 897, 963, 936, 639, 693, 369, 396, 852, 825, 258, 285, 582,
	 528, 741, 714, 147, 174, 417, 471, 753, 735, 357, 375, 573, 537, 951, 915, 519, 591, 10, 1, 17, 9,  500, 0, 100, 23, 56, 12, 
	 34, 78, 90, 900, 234, 455, 31, 92, 32, 2, 65, 3, 87, 4, 7, 6, 8, 13, 21, 85, 11, 67, 66, 23445, 9899, 232, 999, 23445, 1234, 
	 3444, 278, 876, 871, 230, 302, 205, 1001, 756, 765, 657, 675, 576, 567, 111, 123, 132, 231, 213, 312, 321, 456, 465, 546, 564,
	 654, 645, 987, 978, 789, 798, 879, 897, 963, 936, 639, 693, 369, 396, 852, 825, 258, 285, 582, 528, 741, 714, 147, 174, 417,
	 471, 753, 735, 357, 375, 573, 537, 951, 915, 519, 591, 10, 1, 17, 9,  500, 0, 100, 23, 56, 12, 34, 78, 90, 900, 234, 455, 31, 
	 92, 32, 2, 65, 3, 87, 4, 7, 6, 8, 13,21, 85, 11, 67, 66, 23445, 9899, 232, 999, 23445, 1234, 3444, 278, 876, 871, 230, 302, 
	 205, 1001, 756, 765, 657, 675, 576, 567, 111, 123, 132, 231, 213, 312, 321, 456, 465, 546, 564, 654, 645, 987, 978, 789, 798, 
	 879, 897, 963, 936, 639, 693, 369, 396, 852, 825, 258, 285, 582, 528, 741, 714, 147, 174, 417, 471, 753, 735, 357, 375, 573, 
	 537, 951, 915, 519, 591, 5, 5, 5, 5};
	iterations = 0;
	
	heapSort(numbers, 404);
	
	cout << endl << "Sorted Array : ";
	DisplayArray(numbers, 404);
	
	cout << endl << "Number of iterations : " << iterations;
	
	cout << endl;
	return 0;
} 
